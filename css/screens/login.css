.welcome-header {
  position: sticky;
  margin: 0 0 90px 0px;
  padding-top: 90px;
  /* 아래 90만큼 띄우려고 */
  text-align: center;
  /* 문자 text를 가운데에 정렬하기 위해서 */
  display: flex;
  /* flex는 정렬이 기본이 가로이기 때문에 flex-direction:column을 주어 세로 정렬로 만든다. */
  flex-direction: column;
  align-items: center;
  /* flex안에 자식요소들의 정렬을 가운데로 맞추기 위해서 */
}

.welcome-header__title {
  margin-bottom: 40px;
  /* 제목과 글자 사이를 띄우려고, 제목 밑에 공간을 줌 */
  font-size: 25px;
  font-weight: 500;
}

.welcome-header__text {
  width: 55%;
  /* 화면 전체 width의 55퍼센트만 사용 */
  opacity: 0.7;
  /* 투명도를 줄여 글자색이 회색처럼 연하게 보이게 만듬 */
}

#login-form {
  display: flex;
  /* 지금 수평으로 나란히 놓여있는 이 빈칸들을 위아래로 놓고싶은데
  그럴려면 display:block을 하나하나씩 해줘야 되는데 그게 너무 귀찮으니 
  한번에 하기 위해서 display:flex를 했다.
  flex만하면 자동으로 수평정렬이 되는데 우리는 이것을 flex-direction을 이용해서
  세로 정렬을 하면 된다. 그러면 다 바로 세로정렬이 되어서 block으로 하나하나를 다
  지정해주는 것보다 훨씬 유용하게 정렬시킬 수 있다.*/
  flex-direction: column;
  margin: 0px 30px;
}

#login-form input {
  padding: 10px 0px;
  border: none;
  font-size: 15px;
  /* border-bottom: 2px solid rgba(0, 0, 0, 0.3); */
  /* transition: border-color 1s ease-in-out; */
}

#login-form input:not([type="submit"]) {
  /* not은 이것을 제외한 나머지에 적용한다는 것 */
  border-bottom: 2px solid rgba(0, 0, 0, 0.2);
  transition: border-color 1s ease-in-out;
}

#login-form input::placeholder {
  color: rgba(0, 0, 0, 0.3);
  padding-left: 1px;
}

#login-form input:focus {
  outline: none;
  /* 마우스가 잡힌뒤에 계속 그걸 사용할때 입력창 테두리 삭제. */
  border-color: var(--yellow);
}

#login-form input:nth-child(1),
#login-form input:nth-child(2) {
  margin-bottom: 20px;
  /* input중에서 첫번째, 두번째것만 밑에 마진을 20주고 싶었음. */
}

#login-form input[type="submit"] {
  padding: 15px 0px;
  margin-bottom: 10px;
  background-color: var(--yellow);
  border-radius: 5px;
  cursor: pointer;
}

#login-form a {
  text-align: center;
  text-decoration: none;
  font-size: 13px;
  color: inherit;
  /*inherit : 부모것을 상속해옴. 
  여기서는 login-form color를 그대로 따름. 
  딱히 지정안했으니 걍 검정임. */
}
